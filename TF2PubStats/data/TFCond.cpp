#include "TFCond.hpp"

#include "misc/Util.hpp"

const char* EnumToString(TFCond cond)
{
	switch (cond)
	{
		ENUM2STR(TFCond_Slowed);
		ENUM2STR(TFCond_Zoomed);
		ENUM2STR(TFCond_Disguising);
		ENUM2STR(TFCond_Disguised);
		ENUM2STR(TFCond_Cloaked);
		ENUM2STR(TFCond_Ubercharged);
		ENUM2STR(TFCond_TeleportedGlow);
		ENUM2STR(TFCond_Taunting);
		ENUM2STR(TFCond_UberchargeFading);
		ENUM2STR(TFCond_CloakFlicker);
		ENUM2STR(TFCond_Teleporting);
		ENUM2STR(TFCond_Kritzkrieged);
		ENUM2STR(TFCond_TmpDamageBonus);
		ENUM2STR(TFCond_DeadRingered);
		ENUM2STR(TFCond_Bonked);
		ENUM2STR(TFCond_Dazed);
		ENUM2STR(TFCond_Buffed);
		ENUM2STR(TFCond_Charging);
		ENUM2STR(TFCond_DemoBuff);
		ENUM2STR(TFCond_CritCola);
		ENUM2STR(TFCond_InHealRadius);
		ENUM2STR(TFCond_Healing);
		ENUM2STR(TFCond_OnFire);
		ENUM2STR(TFCond_Overhealed);
		ENUM2STR(TFCond_Jarated);
		ENUM2STR(TFCond_Bleeding);
		ENUM2STR(TFCond_DefenseBuffed);
		ENUM2STR(TFCond_Milked);
		ENUM2STR(TFCond_MegaHeal);
		ENUM2STR(TFCond_RegenBuffed);
		ENUM2STR(TFCond_MarkedForDeath);
		ENUM2STR(TFCond_NoHealingDamageBuff);
		ENUM2STR(TFCond_SpeedBuffAlly);
		ENUM2STR(TFCond_HalloweenCritCandy);
		ENUM2STR(TFCond_CritCanteen);
		ENUM2STR(TFCond_CritDemoCharge);
		ENUM2STR(TFCond_CritHype);
		ENUM2STR(TFCond_CritOnFirstBlood);
		ENUM2STR(TFCond_CritOnWin);
		ENUM2STR(TFCond_CritOnFlagCapture);
		ENUM2STR(TFCond_CritOnKill);
		ENUM2STR(TFCond_RestrictToMelee);
		ENUM2STR(TFCond_DefenseBuffNoCritBlock);
		ENUM2STR(TFCond_Reprogrammed);
		ENUM2STR(TFCond_CritMmmph);
		ENUM2STR(TFCond_DefenseBuffMmmph);
		ENUM2STR(TFCond_FocusBuff);
		ENUM2STR(TFCond_DisguiseRemoved);
		ENUM2STR(TFCond_MarkedForDeathSilent);
		ENUM2STR(TFCond_DisguisedAsDispenser);
		ENUM2STR(TFCond_Sapped);
		ENUM2STR(TFCond_UberchargedHidden);
		ENUM2STR(TFCond_UberchargedCanteen);
		ENUM2STR(TFCond_HalloweenBombHead);
		ENUM2STR(TFCond_HalloweenThriller);
		ENUM2STR(TFCond_RadiusHealOnDamage);
		ENUM2STR(TFCond_CritOnDamage);
		ENUM2STR(TFCond_UberchargedOnTakeDamage);
		ENUM2STR(TFCond_UberBulletResist);
		ENUM2STR(TFCond_UberBlastResist);
		ENUM2STR(TFCond_UberFireResist);
		ENUM2STR(TFCond_SmallBulletResist);
		ENUM2STR(TFCond_SmallBlastResist);
		ENUM2STR(TFCond_SmallFireResist);
		ENUM2STR(TFCond_Stealthed);
		ENUM2STR(TFCond_MedigunDebuff);
		ENUM2STR(TFCond_StealthedUserBuffFade);
		ENUM2STR(TFCond_BulletImmune);
		ENUM2STR(TFCond_BlastImmune);
		ENUM2STR(TFCond_FireImmune);
		ENUM2STR(TFCond_PreventDeath);
		ENUM2STR(TFCond_MVMBotRadiowave);
		ENUM2STR(TFCond_HalloweenSpeedBoost);
		ENUM2STR(TFCond_HalloweenQuickHeal);
		ENUM2STR(TFCond_HalloweenGiant);
		ENUM2STR(TFCond_HalloweenTiny);
		ENUM2STR(TFCond_HalloweenInHell);
		ENUM2STR(TFCond_HalloweenGhostMode);
		ENUM2STR(TFCond_DodgeChance);
		ENUM2STR(TFCond_Parachute);
		ENUM2STR(TFCond_BlastJumping);
		ENUM2STR(TFCond_HalloweenKart);
		ENUM2STR(TFCond_HalloweenKartDash);
		ENUM2STR(TFCond_BalloonHead);
		ENUM2STR(TFCond_MeleeOnly);
		ENUM2STR(TFCond_SwimmingCurse);
		ENUM2STR(TFCond_HalloweenKartNoTurn);
		ENUM2STR(TFCond_HalloweenKartCage);
		ENUM2STR(TFCond_HasRune);
		ENUM2STR(TFCond_RuneStrength);
		ENUM2STR(TFCond_RuneHaste);
		ENUM2STR(TFCond_RuneRegen);
		ENUM2STR(TFCond_RuneResist);
		ENUM2STR(TFCond_RuneVampire);
		ENUM2STR(TFCond_RuneWarlock);
		ENUM2STR(TFCond_RunePrecision);
		ENUM2STR(TFCond_RuneAgility);

		ENUM2STR(TFCond_RuneRevenge);
		ENUM2STR(TFCond_RuneCrit);

		ENUM2STR(TFCond_SpawnOutline);
		ENUM2STR(TFCond_KnockedIntoAir);
		ENUM2STR(TFCond_CompetitiveWinner);
		ENUM2STR(TFCond_CompetitiveLoser);
		ENUM2STR(TFCond_NoTaunting);

		default:
			throw std::invalid_argument("cond was not a valid TFCond");
	}
}
