#include "TFWeapon.hpp"
#include "TFWeapon.hpp"
#include "misc/Util.hpp"

#include <stdexcept>

const char* EnumToString(TFWeapon weapon)
{
	switch (weapon)
	{
		ENUM2STR(TF_WEAPON_NONE);
		ENUM2STR(TF_WEAPON_BAT);
		ENUM2STR(TF_WEAPON_BAT_WOOD);
		ENUM2STR(TF_WEAPON_BOTTLE);
		ENUM2STR(TF_WEAPON_FIREAXE);
		ENUM2STR(TF_WEAPON_CLUB);
		ENUM2STR(TF_WEAPON_CROWBAR);
		ENUM2STR(TF_WEAPON_KNIFE);
		ENUM2STR(TF_WEAPON_FISTS);
		ENUM2STR(TF_WEAPON_SHOVEL);
		ENUM2STR(TF_WEAPON_WRENCH);
		ENUM2STR(TF_WEAPON_BONESAW);
		ENUM2STR(TF_WEAPON_SHOTGUN_PRIMARY);
		ENUM2STR(TF_WEAPON_SHOTGUN_SOLDIER);
		ENUM2STR(TF_WEAPON_SHOTGUN_HWG);
		ENUM2STR(TF_WEAPON_SHOTGUN_PYRO);
		ENUM2STR(TF_WEAPON_SCATTERGUN);
		ENUM2STR(TF_WEAPON_SNIPERRIFLE);
		ENUM2STR(TF_WEAPON_MINIGUN);
		ENUM2STR(TF_WEAPON_SMG);
		ENUM2STR(TF_WEAPON_SYRINGEGUN_MEDIC);
		ENUM2STR(TF_WEAPON_TRANQ);
		ENUM2STR(TF_WEAPON_ROCKETLAUNCHER);
		ENUM2STR(TF_WEAPON_GRENADELAUNCHER);
		ENUM2STR(TF_WEAPON_PIPEBOMBLAUNCHER);
		ENUM2STR(TF_WEAPON_FLAMETHROWER);
		ENUM2STR(TF_WEAPON_GRENADE_NORMAL);
		ENUM2STR(TF_WEAPON_GRENADE_CONCUSSION);
		ENUM2STR(TF_WEAPON_GRENADE_NAIL);
		ENUM2STR(TF_WEAPON_GRENADE_MIRV);
		ENUM2STR(TF_WEAPON_GRENADE_MIRV_DEMOMAN);
		ENUM2STR(TF_WEAPON_GRENADE_NAPALM);
		ENUM2STR(TF_WEAPON_GRENADE_GAS);
		ENUM2STR(TF_WEAPON_GRENADE_EMP);
		ENUM2STR(TF_WEAPON_GRENADE_CALTROP);
		ENUM2STR(TF_WEAPON_GRENADE_PIPEBOMB);
		ENUM2STR(TF_WEAPON_GRENADE_SMOKE_BOMB);
		ENUM2STR(TF_WEAPON_GRENADE_HEAL);
		ENUM2STR(TF_WEAPON_GRENADE_STUNBALL);
		ENUM2STR(TF_WEAPON_GRENADE_JAR);
		ENUM2STR(TF_WEAPON_GRENADE_JAR_MILK);
		ENUM2STR(TF_WEAPON_PISTOL);
		ENUM2STR(TF_WEAPON_PISTOL_SCOUT);
		ENUM2STR(TF_WEAPON_REVOLVER);
		ENUM2STR(TF_WEAPON_NAILGUN);
		ENUM2STR(TF_WEAPON_PDA);
		ENUM2STR(TF_WEAPON_PDA_ENGINEER_BUILD);
		ENUM2STR(TF_WEAPON_PDA_ENGINEER_DESTROY);
		ENUM2STR(TF_WEAPON_PDA_SPY);
		ENUM2STR(TF_WEAPON_BUILDER);
		ENUM2STR(TF_WEAPON_MEDIGUN);
		ENUM2STR(TF_WEAPON_GRENADE_MIRVBOMB);
		ENUM2STR(TF_WEAPON_FLAMETHROWER_ROCKET);
		ENUM2STR(TF_WEAPON_GRENADE_DEMOMAN);
		ENUM2STR(TF_WEAPON_SENTRY_BULLET);
		ENUM2STR(TF_WEAPON_SENTRY_ROCKET);
		ENUM2STR(TF_WEAPON_DISPENSER);
		ENUM2STR(TF_WEAPON_INVIS);
		ENUM2STR(TF_WEAPON_FLAREGUN);
		ENUM2STR(TF_WEAPON_LUNCHBOX);
		ENUM2STR(TF_WEAPON_JAR);
		ENUM2STR(TF_WEAPON_COMPOUND_BOW);
		ENUM2STR(TF_WEAPON_BUFF_ITEM);
		ENUM2STR(TF_WEAPON_PUMPKIN_BOMB);
		ENUM2STR(TF_WEAPON_SWORD);
		ENUM2STR(TF_WEAPON_DIRECTHIT);
		ENUM2STR(TF_WEAPON_LIFELINE);
		ENUM2STR(TF_WEAPON_LASER_POINTER);
		ENUM2STR(TF_WEAPON_DISPENSER_GUN);
		ENUM2STR(TF_WEAPON_SENTRY_REVENGE);
		ENUM2STR(TF_WEAPON_JAR_MILK);
		ENUM2STR(TF_WEAPON_HANDGUN_SCOUT_PRIMARY);
		ENUM2STR(TF_WEAPON_BAT_FISH);
		ENUM2STR(TF_WEAPON_CROSSBOW);
		ENUM2STR(TF_WEAPON_STICKBOMB);
		ENUM2STR(TF_WEAPON_HANDGUN_SCOUT_SEC);
		ENUM2STR(TF_WEAPON_SODA_POPPER);
		ENUM2STR(TF_WEAPON_SNIPERRIFLE_DECAP);
		ENUM2STR(TF_WEAPON_RAYGUN);
		ENUM2STR(TF_WEAPON_PARTICLE_CANNON);
		ENUM2STR(TF_WEAPON_MECHANICAL_ARM);
		ENUM2STR(TF_WEAPON_DRG_POMSON);
		ENUM2STR(TF_WEAPON_BAT_GIFTWRAP);
		ENUM2STR(TF_WEAPON_GRENADE_ORNAMENT);
		ENUM2STR(TF_WEAPON_RAYGUN_REVENGE);
		ENUM2STR(TF_WEAPON_PEP_BRAWLER_BLASTER);
		ENUM2STR(TF_WEAPON_CLEAVER);
		ENUM2STR(TF_WEAPON_GRENADE_CLEAVER);
		ENUM2STR(TF_WEAPON_STICKY_BALL_LAUNCHER);
		ENUM2STR(TF_WEAPON_GRENADE_STICKY_BALL);
		ENUM2STR(TF_WEAPON_SHOTGUN_BUILDING_RESCUE);
		ENUM2STR(TF_WEAPON_CANNON);
		ENUM2STR(TF_WEAPON_THROWABLE);
		ENUM2STR(TF_WEAPON_GRENADE_THROWABLE);
		ENUM2STR(TF_WEAPON_PDA_SPY_BUILD);
		ENUM2STR(TF_WEAPON_GRENADE_WATERBALLOON);
		ENUM2STR(TF_WEAPON_HARVESTER_SAW);
		ENUM2STR(TF_WEAPON_SPELLBOOK);
		ENUM2STR(TF_WEAPON_SPELLBOOK_PROJECTILE);
		ENUM2STR(TF_WEAPON_SNIPERRIFLE_CLASSIC);
		ENUM2STR(TF_WEAPON_PARACHUTE);

		default:
			throw std::invalid_argument("weapon was not a valid TFWeapon");
	}

	return nullptr;
}
